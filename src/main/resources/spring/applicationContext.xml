<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd

			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd">


    <description>Spring公共配置</description>

    <!--<bean class="com.tydic.util.SpringContext"/>-->

    <!-- 打开aop对@Aspectj的注解支持 -->
    <!--<aop:aspectj-autoproxy/>-->

    <context:annotation-config/>

    <!-- 扫描service、dao -->
    <context:component-scan base-package="com.itzyf.service,com.itzyf.dao">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:exclude-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>


    <!-- 读取配置文件 -->
    <context:property-placeholder ignore-unresolvable="true"
                                  location="classpath*:jdbc.properties"/>


    <!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务
    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>-->


    <!-- 异常处理记录日志 -->
    <!--<bean id="exceptionThrowsAdvice" class="com.tydic.framework.base.interceptor.ExceptionThrowsAdvice"></bean>-->
    <!-- 配置sqlSessionTemplate -->
    <!--<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">-->
    <!--<constructor-arg index="0" ref="sqlSessionFactory" />-->
    <!--</bean>-->

    <!-- spring整合mybatis （mybatis-spring项目提供整合类） -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mapperLocations">
            <array>
                <value>classpath:mapper/*.xml</value>
            </array>
        </property>
        <property name="typeAliasesPackage" value="com.tydic.wx.model"/>
        <property name="plugins">
            <array>
                <bean class="com.github.pagehelper.PageHelper">
                    <property name="properties">
                        <value>
                            offsetAsPageNum=true
                            rowBoundsWithCount=true
                            pageSizeZero=true
                            reasonable=true
                        </value>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- MyBatis 动态实现  -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.itzyf.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
        <!-- 对Dao 接口动态实现，需要知道接口在哪  -->
    </bean>

    <!--生产环境用jndi
  <jee:jndi-lookup id="dataSource" jndi-name="jdbc/weixin" />-->

    <!--&lt;!&ndash; 开发环境数据源&ndash;&gt;-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="initialSize" value="${jdbc.initialSize}"/>
        <property name="maxActive" value="${jdbc.maxActive}"/>
        <property name="maxIdle" value="${jdbc.maxIdle}"/>
        <property name="minIdle" value="${jdbc.minIdle}"/>
    </bean>

    <!-- 定义事务 -->
    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--<aop:config>-->
    <!--<aop:advisor-->
    <!--pointcut="execution(* com.tydic.wx.*.*(..))"-->
    <!--advice-ref="txAdvice" />-->
    <!--</aop:config>-->
    <!--&lt;!&ndash; 事务切面 &ndash;&gt;-->
    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--<tx:method name="add*" rollback-for="Exception" />-->
    <!--<tx:method name="insert*" rollback-for="Exception" />-->
    <!--<tx:method name="update*" rollback-for="Exception" />-->
    <!--<tx:method name="del*" rollback-for="Exception" />-->
    <!--<tx:method name="save*" rollback-for="Exception" />-->
    <!--<tx:method name="remove*" rollback-for="Exception" />-->
    <!--<tx:method name="*_Trans" rollback-for="Exception" />-->
    <!--<tx:method name="*_NotTrans" read-only="true" propagation="SUPPORTS" />-->
    <!--<tx:method name="*" read-only="true" />-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">-->
    <!--<property name="maxTotal" value="50" />-->
    <!--<property name="maxIdle" value="10" />-->
    <!--<property name="maxWaitMillis" value="1000" />-->
    <!--<property name="testOnBorrow" value="true" />-->

    <!--</bean>-->

    <!--&lt;!&ndash;<bean id="jedisPool" class="redis.clients.jedis.JedisPool">&ndash;&gt;-->
    <!--&lt;!&ndash;<constructor-arg index="0" ref="jedisPoolConfig" />&ndash;&gt;-->
    <!--&lt;!&ndash;<constructor-arg index="1" type="java.lang.String" value="192.168.161.158" />&ndash;&gt;-->
    <!--&lt;!&ndash;<constructor-arg index="2" value="6379" />&ndash;&gt;-->
    <!--&lt;!&ndash;</bean>&ndash;&gt;-->

    <!--<bean id="jedis.shardInfo" class="redis.clients.jedis.JedisShardInfo">-->
    <!--<constructor-arg index="0" value="${redis.host}" />-->
    <!--<constructor-arg index="1" type="int" value="${redis.port}" />-->
    <!--</bean>-->

    <!--<bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool">-->
    <!--<constructor-arg index="0" ref="jedisPoolConfig" />-->
    <!--<constructor-arg index="1">-->
    <!--<list>-->
    <!--<ref bean="jedis.shardInfo" />-->
    <!--</list>-->
    <!--</constructor-arg>-->
    <!--</bean>-->
</beans>
